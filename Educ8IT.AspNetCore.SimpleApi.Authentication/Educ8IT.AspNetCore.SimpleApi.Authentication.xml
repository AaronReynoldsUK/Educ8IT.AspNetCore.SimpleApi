<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Educ8IT.AspNetCore.SimpleApi.Authentication</name>
    </assembly>
    <members>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.ApiDescriptions.AuthenticationAwareApiDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.ApiDescriptions.AuthenticationAwareApiDescription.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Educ8IT.AspNetCore.SimpleApi.ApiMapperOptions})">
            <summary>
            
            </summary>
            <param name="apiMapperOptions"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.ApiDescriptions.AuthenticationAwareApiDescription.InitialiseController(System.Type)">
            <summary>
            Initialise AuthenticationAwareApiControllerItem from controller type
            </summary>
            <param name="controllerType">Controller class type</param>
            <returns>An AuthenticationAwareApiControllerItem object</returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute.#ctor">
            <summary>
            Use default Authentication policy
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute.#ctor(Educ8IT.AspNetCore.SimpleApi.Authentication.EAuthenticationType)">
            <summary>
            Set AuthenticationType required
            </summary>
            <param name="authenticationTypeRequired"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute.#ctor(System.String[])">
            <summary>
            Set AuthenticationType required
            </summary>
            <param name="claimsRequired"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute.AuthenticationTypeRequired">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute.ClaimsRequired">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes.RequiredClaim">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes.Authenticated">
            <summary>
            Identity confirmed via user/password or similar authentication.
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes.UserId">
            <summary>
            Identity Id from data source.
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes.UserName">
            <summary>
            Identity UserName from data source.
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes.EmailConfirmed">
            <summary>
            Email Address confirmed
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationClaimTypes.Mfa">
            <summary>
            MFA completed
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EAuthenticationType">
            <summary>
            Used in Multi-Stage Authentication
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EAuthenticationType.None">
            <summary>
            Not Authenticated
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EAuthenticationType.Identity">
            <summary>
            User/Identity is Authenticated
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EAuthenticationType.Email">
            <summary>
            Email Address is Confirmed
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EAuthenticationType.MFA">
            <summary>
            MFA has been performed
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.IAuthenticationServiceExtended">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.IAuthenticationServiceExtended.UpdateClaimsAsync(Microsoft.AspNetCore.Http.HttpContext,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="claimsPrincipal"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.ICanAuthenticateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.ICanAuthenticateRequest.CanAuthenticateRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.ICanAuthenticateRequest.UpdateClaimsAsync(System.Security.Claims.ClaimsPrincipal,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,System.Collections.Generic.List{Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken})">
            <summary>
            
            </summary>
            <param name="claimsPrinciple"></param>
            <param name="apiUser"></param>
            <param name="apiUserTokens"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.IHasEAuthenticationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.IHasEAuthenticationType.AuthenticationType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Controllers.ApiAuthenticationController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Controllers.ApiAuthenticationController.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Logging.ILogger{Educ8IT.AspNetCore.SimpleApi.Authentication.Controllers.ApiAuthenticationController},Educ8IT.AspNetCore.SimpleApi.IApiMapperService,Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.ApiMapperOptions})">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="iLogger"></param>
            <param name="apiMapperService"></param>
            <param name="apiMapperOptions"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationAwareApiMapperServiceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationAwareApiMapperServiceExtensions.IsAuthenticated(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.HttpContextExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.HttpContextExtensions.GetAuthenticationHeader(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.HttpContextExtensions.CanAuthenticateRequest(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="headerName"></param>
            <param name="schemeName"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.IServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.IServiceCollectionExtensions.AddIdentityManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerOptions})">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper.CombineWith(Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute,Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticateAttribute)">
            <summary>
            
            </summary>
            <param name="authenticateAttribute"></param>
            <param name="secondAttribute"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper.AddClaim(System.Security.Claims.ClaimsPrincipal,System.Security.Claims.Claim)">
            <summary>
            
            </summary>
            <param name="claimsPrincipal"></param>
            <param name="claim"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper.GetClaim(System.Security.Claims.ClaimsPrincipal,System.String)">
            <summary>
            
            </summary>
            <param name="claimsPrincipal"></param>
            <param name="claimType"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper.HasClaim(System.Security.Claims.ClaimsPrincipal,System.String)">
            <summary>
            
            </summary>
            <param name="claimsPrincipal"></param>
            <param name="claimType"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper.SetRequiredClaim(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)">
            <summary>
            
            </summary>
            <param name="authenticationProperties"></param>
            <param name="claimType"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationHelper.GetRequiredClaim(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            
            </summary>
            <param name="authenticationProperties"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.IApiMapperOptionsExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.IApiMapperOptionsExtensions.AddAuthenticationDocumentation(Educ8IT.AspNetCore.SimpleApi.IApiMapperOptions)">
            <summary>
            
            </summary>
            <param name="apiMapperOptions"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationIdentityManagerService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationIdentityManagerService.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Identity.IdentityManagerOptions},Educ8IT.AspNetCore.SimpleApi.Identity.IdentityDbContext)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="options"></param>
            <param name="identityDbContext"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.AuthenticationIdentityManagerService.GetClaimsPrinciple(Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,System.String,System.Collections.Generic.List{System.Security.Claims.Claim})">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_ExportDto">
            <summary>
            DTO for GET operations
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_ExportDto.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_ExportDto.#ctor(Educ8IT.AspNetCore.SimpleApi.Identity.ApiClaim)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_ExportDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_ExportDto.ClaimType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_ExportDto.ClaimValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_InsertDto">
            <summary>
            DTO for POST operations
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_InsertDto.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_InsertDto.MapToDbModel(Educ8IT.AspNetCore.SimpleApi.Identity.ApiClaim)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_InsertDto.ClaimType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_InsertDto.ClaimValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_UpdateDto">
            <summary>
            DTO for PUT/PATCH operations
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_UpdateDto.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_UpdateDto.MapToDbModel(Educ8IT.AspNetCore.SimpleApi.Identity.ApiClaim)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_UpdateDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_UpdateDto.ClaimType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiClaim_UpdateDto.ClaimValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto">
            <summary>
            DTO for GET operations
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.#ctor(Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.FriendlyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.Parameters">
            <summary>
            Configuration Url
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.PublicInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_ExportDto.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto">
            <summary>
            DTO for POST operations
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.MapToDbModel(Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.FriendlyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.Parameters">
            <summary>
            Configuration Url
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.PublicInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto">
            <summary>
            DTO for PUT/PATCH operations
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.MapToDbModel(Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.FriendlyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.Parameters">
            <summary>
            Configuration Url
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.PublicInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.IdentityDbContextExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.IdentityDbContextExtensions.SearchMfa(Educ8IT.AspNetCore.SimpleApi.Identity.IdentityDbContext,System.Collections.Generic.Dictionary{System.String,System.String},Educ8IT.AspNetCore.SimpleApi.Common.QueryResultOfT{Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa})">
            <summary>
            
            </summary>
            <param name="dbContext"></param>
            <param name="searchQuery"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandlerProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandlerProvider.SupportedMethods">
            <summary>
            Returns a list of the supported <see cref="T:Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod"/> methods 
             handled by registered <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler"/> handlers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandlerProvider.GetHandlerAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="mfaScheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandlerProvider.GetHandlerAsync(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandlerProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandlerProvider.#ctor(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider)">
            <summary>
            
            </summary>
            <param name="schemes"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandlerProvider.Schemes">
            <summary>
            The <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandlerProvider"/>.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandlerProvider.SupportedMethods">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandlerProvider.GetHandlerAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandlerProvider.GetHandlerAsync(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod)">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.InitializeAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="scheme"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.HandleRequestAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.GetCurrentOTC">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.IsValidOTC(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.GetProvisionUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.GetPromptUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.Prompt(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="user"></param>
            <param name="apiMfa"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler.Verify(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="user"></param>
            <param name="apiMfa"></param>
            <param name="scheme"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{`0},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Scheme">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Request">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Response">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.UrlEncoder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.OptionsMonitor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.InitializeAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme,Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.GetCurrentOTC">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.GetPromptUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.GetProvisionUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.IsValidOTC(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Prompt(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaHandler`1.Verify(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService">
            <summary>
            Used to provide MFA.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.GetSchemeName(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.GetCurrentOTC(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.IsValidOTC(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.GetProvisionUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            used by apps (includes secret)
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.GetPromptUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            used by email, sms, call etc
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.Prompt(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="user"></param>
            <param name="apiMfa"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService.Verify(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="user"></param>
            <param name="apiMfa"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaBuilder.Services" -->
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaBuilder.AddScheme``2(System.String,System.String,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod,System.Action{``0})">
            <summary>
            
            </summary>
            <typeparam name="TOptions"></typeparam>
            <typeparam name="THandler"></typeparam>
            <param name="mfaScheme"></param>
            <param name="displayName"></param>
            <param name="method"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddleware">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider,Microsoft.Extensions.Options.IOptionsMonitor{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions})">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="schemes"></param>
            <param name="options"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddleware.Schemes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddlewareExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddlewareExtensions.AddMfa(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddlewareExtensions.AddMfa(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions})">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configureOptions"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddlewareExtensions.AddMfa(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddlewareExtensions.GetMfaServiceOptions(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaMiddlewareExtensions.UseMfa(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions.SettingsKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions.Schemes">
            <summary>
            Returns the schemes in the order they were added (important for request handling priority)
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions.SchemeMap">
            <summary>
            Maps schemes by name.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions.AddScheme(System.String,System.Action{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder})">
            <summary>
            Adds an <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/>.
            </summary>
            <param name="name">The name of the scheme being added.</param>
            <param name="configureBuilder">Configures the scheme.</param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions.AddScheme``1(System.String,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod,System.String)">
            <summary>
            Adds an <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/>.
            </summary>
            <typeparam name="THandler">The <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler"/> responsible for the scheme.</typeparam>
            <param name="name">The name of the scheme being added.</param>
            <param name="method"></param>
            <param name="displayName">The display name for the scheme.</param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions.DefaultScheme">
            <summary>
            Used as the default scheme if none selected by user.
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService">
            <summary>
            Implements <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService"/>.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.#ctor(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider,Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandlerProvider,Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions})">
            <summary>
            
            </summary>
            <param name="schemes"></param>
            <param name="handlers"></param>
            <param name="options"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.Schemes">
            <summary>
            Used to lookup MfaSchemes.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.Handlers">
            <summary>
            Used to resolve IMfaHandler instances.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.Options">
            <summary>
            The <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions"/>.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.GetSchemeName(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.GetCurrentOTC(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.IsValidOTC(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.GetProvisionUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.GetPromptUri(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.Prompt(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaService.Verify(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider">
            <summary>
            Responsible for managing what MfaSchemes are supported.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.GetAllSchemesAsync">
            <summary>
            Returns all currently registered <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/>s.
            </summary>
            <returns>All currently registered <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/>s.</returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.GetSchemeForMethodAsync(Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.GetSchemeAsync(System.String)">
            <summary>
            Returns the <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/> matching the name, or null.
            </summary>
            <param name="name">The name of the MfaScheme.</param>
            <returns>The scheme or null if not found.</returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.GetDefaultSchemeAsync">
            <summary>
            Returns the scheme that will be used by default for MFA if no preference provided
            </summary>
            <returns>The scheme that will be used by default for MFA if no preference provided</returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.AddScheme(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme)">
            <summary>
            Registers a scheme for use by <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService"/>. 
            </summary>
            <param name="scheme">The scheme.</param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.RemoveScheme(System.String)">
            <summary>
            Removes a scheme, preventing it from being used by <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService"/>.
            </summary>
            <param name="name">The name of the MfaScheme being removed.</param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaSchemeProvider.GetRequestHandlerSchemesAsync">
            <summary>
            Returns the schemes in priority order for request handling.
            </summary>
            <returns>The schemes in priority order for request handling</returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.GetAllSchemesAsync">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.GetSchemeForMethodAsync(Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.GetSchemeAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.GetDefaultSchemeAsync">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.AddScheme(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.RemoveScheme(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.GetRequestHandlerSchemesAsync">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.#ctor(Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions})">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeProvider.#ctor(Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaOptions},System.Collections.Generic.IDictionary{System.String,Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme})">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="schemes"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaDefaults.SCHEME_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaDefaults.SCHEME_DISPLAY_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaDefaults.METHOD">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaExtensions.AddEmailMfa(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaExtensions.AddEmailMfa(Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaBuilder,System.Action{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaHandler.Prompt(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaHandler.Verify(Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.EmailMfaOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme">
            <summary>
            MfaSchemes assign a name to a specific <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler"/>
            handlerType.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme.#ctor(System.String,Educ8IT.AspNetCore.SimpleApi.Identity.EMfaMethod,System.String,System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="name">The name for the MFA scheme.</param>
            <param name="method"></param>
            <param name="displayName">The display name for the MFA scheme.</param>
            <param name="handlerType">The <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler"/> type that handles this scheme.</param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme.Name">
            <summary>
            The name of the MFA scheme.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme.DisplayName">
            <summary>
            The display name for the MFA scheme. 
            Null is valid and used for non-user facing schemes.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme.HandlerType">
            <summary>
            The <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler"/> type that handles this Scheme
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder">
            <summary>
            Used to build <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/>s.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">The name of the scheme being built.</param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder.Name">
            <summary>
            The name of the scheme being built.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder.DisplayName">
            <summary>
            The display name for the scheme being built.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder.HandlerType">
            <summary>
            The <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaHandler"/> type responsible for this scheme.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeBuilder.Build">
            <summary>
            Builds the <see cref="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaScheme"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeOptions.Validate">
            <summary>
            Check that the options are valid. Should throw an exception if things are not ok.
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.MfaSchemeOptions.Validate(System.String)">
            <summary>
            Checks that the options are valid for a specific scheme
            </summary>
            <param name="scheme">The scheme being validated.</param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest">
            <summary>
            Authentication request
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.ALLOWED_GRANT_TYPES">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.GrantType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.RefreshToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.ConfirmationToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.MfaMethodId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.MfaCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest.Validate``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="topLevelObject"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.TokenType">
            <summary>
            { bearer | email_confirmation | mfa | password_reset }
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.StartDT">
            <summary>
            Issue date/time for this token
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.ExpiryDT">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.Issued">
            <summary>
            Issue date/time for this token
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.Expires">
            <summary>
            Expiry date/time for this token
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.ExpiredInS">
            <summary>
            TTL in seconds for this token
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.AccessToken">
            <summary>
            The bearer token needed to access the full API
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.ShouldSerializeAccessToken">
            <summary>
            Only serialise the AccessToken if supplied
            </summary>
            <returns></returns>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.RefreshToken">
            <summary>
            The bearer token needed to get a new Bearer token upon expiry
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.ShouldSerializeRefreshToken">
            <summary>
            Only serialise the AccessToken if supplied
            </summary>
            <returns></returns>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.KeyValuePairs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.ShouldSerializeKeyValuePairs">
            <summary>
            Only serialise the KeyValuePairs if supplied
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenResponse.GetAccessToken(Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken)">
            <summary>
            
            </summary>
            <param name="accessToken"></param>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.AuthorisationHeaderName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.AuthenticationScheme">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.LoginPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.RefreshPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.LogoutPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.RequestGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.AccessTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.AccessTokenTTL">
            <summary>
            Default TTL for an Access Token.
            Default is 3600s = 1 hour
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.RefreshGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.RefreshTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.RefreshTokenTTL">
            <summary>
            Default TTL for a Refresh Token.
            Default is 86400s = 1 day
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.ExtendedDataKey_RemoteIp">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationDefaults.RemoveGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationExtensions.AddBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationExtensions.AddBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme"></param>
            <param name="displayName"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
            <param name="identityManagerService"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.HandleSignInAsync(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.HandleSignOutAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Update the Response for a Challenge
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.CanAuthenticateRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationHandler.UpdateClaimsAsync(System.Security.Claims.ClaimsPrincipal,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,System.Collections.Generic.List{Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken})">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.ExcludeFromAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.ClaimsHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.LoginPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.RefreshPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.LogoutPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.AccessTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.AccessTokenTTL">
            <summary>
            TTL for an Access Token.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.RefreshTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions.RefreshTokenTTL">
            <summary>
            TTL for a Refresh Token.
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationPostConfigureOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationPostConfigureOptions.PostConfigure(System.String,Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="options"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerSchemeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerSchemeController.#ctor(Microsoft.Extensions.Logging.ILogger{Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerSchemeController},Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.IApiMapperService,Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.ApiMapperOptions},Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerAuthenticationOptions},Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService)">
            <summary>
            
            </summary>
            <param name="iLogger"></param>
            <param name="httpContext"></param>
            <param name="apiMapperService"></param>
            <param name="apiMapperOptions"></param>
            <param name="bearerAuthenticationOptions"></param>
            <param name="identityManagerService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerSchemeController.LoginAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerSchemeController.ReAuthenticate(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.BearerScheme.BearerSchemeController.Logout(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Schemes.DefaultAuthenticationDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.Schemes.DefaultAuthenticationDefaults.AuthenticationScheme">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.Schemes.DefaultAuthenticationDefaults.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Schemes.DefaultAuthenticationExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.Schemes.DefaultAuthenticationExtensions.AddDefaultAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.Schemes.DefaultAuthenticationOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.#ctor(Microsoft.Extensions.Logging.ILogger{Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService},Microsoft.AspNetCore.Authentication.IAuthenticationHandlerProvider,Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService,Microsoft.AspNetCore.Authentication.IClaimsTransformation)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="handlers"></param>
            <param name="identityManagerService"></param>
            <param name="transform"></param>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.Microsoft#AspNetCore#Authentication#IAuthenticationService#AuthenticateAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Get the authentication data for a request.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.Microsoft#AspNetCore#Authentication#IAuthenticationService#ChallengeAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Challenge an unauthenticated request
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="properties"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.Microsoft#AspNetCore#Authentication#IAuthenticationService#ForbidAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Used when an authenticated request needs to be denied
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="properties"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.Microsoft#AspNetCore#Authentication#IAuthenticationService#SignInAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Associate a ClaimsPrinciple
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="principal"></param>
            <param name="properties"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.Microsoft#AspNetCore#Authentication#IAuthenticationService#SignOutAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Remove any associated authentication data
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="properties"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.DefaultAuthenticationService.UpdateClaimsAsync(Microsoft.AspNetCore.Http.HttpContext,System.Security.Claims.ClaimsPrincipal)">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.AuthorisationHeaderName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.AuthenticationScheme">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.RequestPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.VerifyPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.RemovePath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.RequestGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.RequestTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.RequestTokenTTL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.VerifyGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.VerifyTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.RemoveGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.EmailSubject">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.EmailBody">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationDefaults.EmailBodyIsHtml">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationExtensions.AddEmailVerification(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationExtensions.AddEmailVerification(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme"></param>
            <param name="displayName"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
            <param name="identityManagerService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationHandler.HandleAuthenticateAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationHandler.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationHandler.CanAuthenticateRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationHandler.UpdateClaimsAsync(System.Security.Claims.ClaimsPrincipal,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,System.Collections.Generic.List{Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken})">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.ClaimsHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.RequestPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.VerifyPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.RemovePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.RequestTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.RequestTokenTTL">
            <summary>
            TTL for an Access Token.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.VerifyTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.EmailSubject">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.EmailBody">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions.EmailBodyIsHtml">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationPostConfigureOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationPostConfigureOptions.PostConfigure(System.String,Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="options"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationSchemeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationSchemeController.#ctor(Microsoft.Extensions.Logging.ILogger{Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationSchemeController},Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.IApiMapperService,Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.ApiMapperOptions},Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationOptions},Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService,Educ8IT.AspNetCore.SimpleApi.Communication.IEmailService)">
            <summary>
            
            </summary>
            <param name="iLogger"></param>
            <param name="httpContext"></param>
            <param name="apiMapperService"></param>
            <param name="apiMapperOptions"></param>
            <param name="emailVerificationOptions"></param>
            <param name="identityManagerService"></param>
            <param name="emailService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationSchemeController.RequestAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.EmailVerificationScheme.EmailVerificationSchemeController.VerifyAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.#ctor(Microsoft.Extensions.Logging.ILogger{Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController},Microsoft.AspNetCore.Http.HttpContext,Educ8IT.AspNetCore.SimpleApi.IApiMapperService,Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.ApiMapperOptions},Microsoft.Extensions.Options.IOptions{Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions},Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService,Educ8IT.AspNetCore.SimpleApi.Identity.IdentityDbContext,Educ8IT.AspNetCore.SimpleApi.Communication.IEmailService,Educ8IT.AspNetCore.SimpleApi.Authentication.Mfa.IMfaService,Educ8IT.AspNetCore.SimpleApi.EndpointContext)">
            <summary>
            
            </summary>
            <param name="iLogger"></param>
            <param name="httpContext"></param>
            <param name="apiMapperService"></param>
            <param name="apiMapperOptions"></param>
            <param name="mfaOptions"></param>
            <param name="identityManagerService"></param>
            <param name="identityDbContext"></param>
            <param name="emailService"></param>
            <param name="mfaService"></param>
            <param name="endpointContext"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.GetMfaEntry(System.Guid)">
            <summary>
            Permissions Required:
            - must be owned by user
            - or, user must have admin role
            </summary>
            <param name="mfaId"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.GetMfaEntries(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Permissions Required:
            - must be owned by user
            - or, user must have admin role
            </summary>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.CreateMfaEntry(Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_InsertDto)">
            <summary>
            Permissions Required:
            - must be owned by user
            - or, user must have admin role
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.UpdateMfaEntry(Educ8IT.AspNetCore.SimpleApi.Authentication.Identity.DtoModel.ApiMfa_UpdateDto)">
            <summary>
            Permissions Required:
            - must be owned by user
            - or, user must have admin role
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.DeleteMfaEntry(System.Guid)">
            <summary>
            Permissions Required:
            - must be owned by user
            - or, user must have admin role
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.GetOptionsAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.RequestAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeController.VerifyAsync(Educ8IT.AspNetCore.SimpleApi.Authentication.BearerTokenRequest)">
            <summary>
            
            </summary>
            <param name="bearerTokenRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.AuthorisationHeaderName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.AuthenticationScheme">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.RequestPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.VerifyPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.RemovePath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.RequestGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.RequestTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.RequestTokenTTL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.VerifyGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.VerifyTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeDefaults.RemoveGrantName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeExtensions.AddMfa(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeExtensions.AddMfa(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme"></param>
            <param name="displayName"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,Educ8IT.AspNetCore.SimpleApi.Identity.IIdentityManagerService)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
            <param name="identityManagerService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeHandler.HandleAuthenticateAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeHandler.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeHandler.CanAuthenticateRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeHandler.UpdateClaimsAsync(System.Security.Claims.ClaimsPrincipal,Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser,System.Collections.Generic.List{Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken})">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.ClaimsHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.RequestPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.VerifyPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.RemovePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.RequestTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.RequestTokenTTL">
            <summary>
            TTL for an Access Token.
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions.VerifyTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemePostConfigureOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemePostConfigureOptions.PostConfigure(System.String,Educ8IT.AspNetCore.SimpleApi.Authentication.MfaScheme.MfaSchemeOptions)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="options"></param>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.Filters.AuthenticationFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Filters.AuthenticationFilter.PreExecution(Educ8IT.AspNetCore.SimpleApi.EndpointContext)">
            <summary>
            
            </summary>
            <param name="endpointContext"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.Filters.AuthenticationFilter.PostExecution(Educ8IT.AspNetCore.SimpleApi.EndpointContext)">
            <summary>
            
            </summary>
            <param name="endpointContext"></param>
            <returns></returns>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiControllerItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiControllerItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiControllerItem.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="controller"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiControllerItem.AuthenticateAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiControllerItem.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiControllerItem.GetMethods">
            <inheritdoc/>
        </member>
        <member name="T:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiMethodItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiMethodItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiMethodItem.#ctor(System.Reflection.MethodInfo,Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.IApiControllerItem)">
            <summary>
            
            </summary>
            <param name="methodInfo"></param>
            <param name="apiControllerItem"></param>
        </member>
        <member name="P:Educ8IT.AspNetCore.SimpleApi.TypeDescriptions.AuthenticationAwareApiMethodItem.AuthenticateAttribute">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
