// <auto-generated />
using System;
using Educ8IT.AspNetCore.SimpleApi.Identity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Educ8IT.AspNetCore.SimpleApi.Identity.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20220725094712_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApiClaims");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ApiMfas");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ApiRoles");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiRoleClaimLink", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("ApiRoleClaims");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedAttemptsCurrent")
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedAttemptsTotal")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("EmailAddressIsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LinkedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LockoutUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ApiUsers");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserClaimLink", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("ApiUserClaims");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserRoleLink", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApiUserRoles");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtendedDataInDb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ApiUserTokens");
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiMfa", b =>
                {
                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser", "User")
                        .WithMany("MfaOptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiRoleClaimLink", b =>
                {
                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiClaim", "Claim")
                        .WithMany()
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiRole", "Role")
                        .WithMany("LinkedClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserClaimLink", b =>
                {
                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiClaim", "Claim")
                        .WithMany()
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser", "User")
                        .WithMany("LinkedClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserRoleLink", b =>
                {
                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser", "User")
                        .WithMany("LinkedRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUserToken", b =>
                {
                    b.HasOne("Educ8IT.AspNetCore.SimpleApi.Identity.ApiUser", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
